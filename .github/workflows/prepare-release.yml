name: Prepare Release

on:
  workflow_dispatch:

env:
  FORCE_COLOR: 2
  NODE: 20

permissions:
  contents: write
  pull-requests: write

jobs:
  semantic-release:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: "${{ env.NODE }}"
          cache: npm

      - name: Install npm dependencies
        run: npm ci

      - name: npx semantic-release
        id: semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push and open Pull request
        if: steps.semantic-release.outputs.next_version != ''
        run: |
          # 设置 Git 用户信息
          git config --global user.name "GitHub Actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # 新建并切换到分支
          git checkout -b release/${{ steps.semantic-release.outputs.next_version }}
          git add package.json CHANGELOG.md
          git commit -m "chore(release): ${{ steps.semantic-release.outputs.next_version }}"
          # 设置 remote URL 带上 token，以便身份验证后推送分支
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin release/${{ steps.semantic-release.outputs.next_version }}
          # 使用 gh CLI 前清除 GITHUB_TOKEN 环境变量
          env -u GITHUB_TOKEN gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
          gh pr create --draft --title "chore(release): ${{ steps.semantic-release.outputs.next_version }}" --body "chore(release): ${{ steps.semantic-release.outputs.next_version }}" --base main --head release/${{ steps.semantic-release.outputs.next_version }}
